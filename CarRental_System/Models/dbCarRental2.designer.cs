#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CarRental_System.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dbCarRental2")]
	public partial class dbCarRental2DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBill_Order(Bill_Order instance);
    partial void UpdateBill_Order(Bill_Order instance);
    partial void DeleteBill_Order(Bill_Order instance);
    partial void InsertBRANCH(BRANCH instance);
    partial void UpdateBRANCH(BRANCH instance);
    partial void DeleteBRANCH(BRANCH instance);
    partial void InsertCAR(CAR instance);
    partial void UpdateCAR(CAR instance);
    partial void DeleteCAR(CAR instance);
    partial void InsertCar_Category(Car_Category instance);
    partial void UpdateCar_Category(Car_Category instance);
    partial void DeleteCar_Category(Car_Category instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertOrderDetail(OrderDetail instance);
    partial void UpdateOrderDetail(OrderDetail instance);
    partial void DeleteOrderDetail(OrderDetail instance);
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    #endregion
		
		public dbCarRental2DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["dbCarRental2ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbCarRental2DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbCarRental2DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbCarRental2DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbCarRental2DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Bill_Order> Bill_Orders
		{
			get
			{
				return this.GetTable<Bill_Order>();
			}
		}
		
		public System.Data.Linq.Table<BRANCH> BRANCHes
		{
			get
			{
				return this.GetTable<BRANCH>();
			}
		}
		
		public System.Data.Linq.Table<CAR> CARs
		{
			get
			{
				return this.GetTable<CAR>();
			}
		}
		
		public System.Data.Linq.Table<Car_Category> Car_Categories
		{
			get
			{
				return this.GetTable<Car_Category>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<OrderDetail> OrderDetails
		{
			get
			{
				return this.GetTable<OrderDetail>();
			}
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bill_Order")]
	public partial class Bill_Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderID;
		
		private System.Nullable<bool> _paid;
		
		private System.Nullable<bool> _orderDetails;
		
		private System.Nullable<System.DateTime> _DateOrder;
		
		private System.Nullable<System.DateTime> _Time_Rent;
		
		private System.Nullable<int> _CusID;
		
		private EntitySet<OrderDetail> _OrderDetails1;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnpaidChanging(System.Nullable<bool> value);
    partial void OnpaidChanged();
    partial void OnorderDetailsChanging(System.Nullable<bool> value);
    partial void OnorderDetailsChanged();
    partial void OnDateOrderChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOrderChanged();
    partial void OnTime_RentChanging(System.Nullable<System.DateTime> value);
    partial void OnTime_RentChanged();
    partial void OnCusIDChanging(System.Nullable<int> value);
    partial void OnCusIDChanged();
    #endregion
		
		public Bill_Order()
		{
			this._OrderDetails1 = new EntitySet<OrderDetail>(new Action<OrderDetail>(this.attach_OrderDetails1), new Action<OrderDetail>(this.detach_OrderDetails1));
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paid", DbType="Bit")]
		public System.Nullable<bool> paid
		{
			get
			{
				return this._paid;
			}
			set
			{
				if ((this._paid != value))
				{
					this.OnpaidChanging(value);
					this.SendPropertyChanging();
					this._paid = value;
					this.SendPropertyChanged("paid");
					this.OnpaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderDetails", DbType="Bit")]
		public System.Nullable<bool> orderDetails
		{
			get
			{
				return this._orderDetails;
			}
			set
			{
				if ((this._orderDetails != value))
				{
					this.OnorderDetailsChanging(value);
					this.SendPropertyChanging();
					this._orderDetails = value;
					this.SendPropertyChanged("orderDetails");
					this.OnorderDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOrder", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOrder
		{
			get
			{
				return this._DateOrder;
			}
			set
			{
				if ((this._DateOrder != value))
				{
					this.OnDateOrderChanging(value);
					this.SendPropertyChanging();
					this._DateOrder = value;
					this.SendPropertyChanged("DateOrder");
					this.OnDateOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time_Rent", DbType="DateTime")]
		public System.Nullable<System.DateTime> Time_Rent
		{
			get
			{
				return this._Time_Rent;
			}
			set
			{
				if ((this._Time_Rent != value))
				{
					this.OnTime_RentChanging(value);
					this.SendPropertyChanging();
					this._Time_Rent = value;
					this.SendPropertyChanged("Time_Rent");
					this.OnTime_RentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CusID", DbType="Int")]
		public System.Nullable<int> CusID
		{
			get
			{
				return this._CusID;
			}
			set
			{
				if ((this._CusID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCusIDChanging(value);
					this.SendPropertyChanging();
					this._CusID = value;
					this.SendPropertyChanged("CusID");
					this.OnCusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bill_Order_OrderDetail", Storage="_OrderDetails1", ThisKey="OrderID", OtherKey="OrderID")]
		public EntitySet<OrderDetail> OrderDetails1
		{
			get
			{
				return this._OrderDetails1;
			}
			set
			{
				this._OrderDetails1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Bill_Order", Storage="_Customer", ThisKey="CusID", OtherKey="CusID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Bill_Orders.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Bill_Orders.Add(this);
						this._CusID = value.CusID;
					}
					else
					{
						this._CusID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderDetails1(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Bill_Order = this;
		}
		
		private void detach_OrderDetails1(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Bill_Order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BRANCH")]
	public partial class BRANCH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BranchID;
		
		private string _BranchName;
		
		private string _Addres;
		
		private string _phonenum;
		
		private EntitySet<CAR> _CARs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBranchIDChanging(int value);
    partial void OnBranchIDChanged();
    partial void OnBranchNameChanging(string value);
    partial void OnBranchNameChanged();
    partial void OnAddresChanging(string value);
    partial void OnAddresChanged();
    partial void OnphonenumChanging(string value);
    partial void OnphonenumChanged();
    #endregion
		
		public BRANCH()
		{
			this._CARs = new EntitySet<CAR>(new Action<CAR>(this.attach_CARs), new Action<CAR>(this.detach_CARs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BranchName
		{
			get
			{
				return this._BranchName;
			}
			set
			{
				if ((this._BranchName != value))
				{
					this.OnBranchNameChanging(value);
					this.SendPropertyChanging();
					this._BranchName = value;
					this.SendPropertyChanged("BranchName");
					this.OnBranchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addres", DbType="NVarChar(200)")]
		public string Addres
		{
			get
			{
				return this._Addres;
			}
			set
			{
				if ((this._Addres != value))
				{
					this.OnAddresChanging(value);
					this.SendPropertyChanging();
					this._Addres = value;
					this.SendPropertyChanged("Addres");
					this.OnAddresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phonenum", DbType="VarChar(12)")]
		public string phonenum
		{
			get
			{
				return this._phonenum;
			}
			set
			{
				if ((this._phonenum != value))
				{
					this.OnphonenumChanging(value);
					this.SendPropertyChanging();
					this._phonenum = value;
					this.SendPropertyChanged("phonenum");
					this.OnphonenumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BRANCH_CAR", Storage="_CARs", ThisKey="BranchID", OtherKey="BranchID")]
		public EntitySet<CAR> CARs
		{
			get
			{
				return this._CARs;
			}
			set
			{
				this._CARs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CARs(CAR entity)
		{
			this.SendPropertyChanging();
			entity.BRANCH = this;
		}
		
		private void detach_CARs(CAR entity)
		{
			this.SendPropertyChanging();
			entity.BRANCH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CAR")]
	public partial class CAR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CarID;
		
		private string _CarName;
		
		private System.Nullable<decimal> _CostPerDay;
		
		private string _Mileage;
		
		private string _StatusCar;
		
		private string _Detail;
		
		private string _Picture;
		
		private System.Nullable<System.DateTime> _Updatedate;
		
		private System.Nullable<int> _CateID;
		
		private System.Nullable<int> _BranchID;
		
		private EntitySet<OrderDetail> _OrderDetails;
		
		private EntityRef<BRANCH> _BRANCH;
		
		private EntityRef<Car_Category> _Car_Category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCarIDChanging(int value);
    partial void OnCarIDChanged();
    partial void OnCarNameChanging(string value);
    partial void OnCarNameChanged();
    partial void OnCostPerDayChanging(System.Nullable<decimal> value);
    partial void OnCostPerDayChanged();
    partial void OnMileageChanging(string value);
    partial void OnMileageChanged();
    partial void OnStatusCarChanging(string value);
    partial void OnStatusCarChanged();
    partial void OnDetailChanging(string value);
    partial void OnDetailChanged();
    partial void OnPictureChanging(string value);
    partial void OnPictureChanged();
    partial void OnUpdatedateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedateChanged();
    partial void OnCateIDChanging(System.Nullable<int> value);
    partial void OnCateIDChanged();
    partial void OnBranchIDChanging(System.Nullable<int> value);
    partial void OnBranchIDChanged();
    #endregion
		
		public CAR()
		{
			this._OrderDetails = new EntitySet<OrderDetail>(new Action<OrderDetail>(this.attach_OrderDetails), new Action<OrderDetail>(this.detach_OrderDetails));
			this._BRANCH = default(EntityRef<BRANCH>);
			this._Car_Category = default(EntityRef<Car_Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CarID
		{
			get
			{
				return this._CarID;
			}
			set
			{
				if ((this._CarID != value))
				{
					this.OnCarIDChanging(value);
					this.SendPropertyChanging();
					this._CarID = value;
					this.SendPropertyChanged("CarID");
					this.OnCarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarName", DbType="NVarChar(99) NOT NULL", CanBeNull=false)]
		public string CarName
		{
			get
			{
				return this._CarName;
			}
			set
			{
				if ((this._CarName != value))
				{
					this.OnCarNameChanging(value);
					this.SendPropertyChanging();
					this._CarName = value;
					this.SendPropertyChanged("CarName");
					this.OnCarNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostPerDay", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CostPerDay
		{
			get
			{
				return this._CostPerDay;
			}
			set
			{
				if ((this._CostPerDay != value))
				{
					this.OnCostPerDayChanging(value);
					this.SendPropertyChanging();
					this._CostPerDay = value;
					this.SendPropertyChanged("CostPerDay");
					this.OnCostPerDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mileage", DbType="NVarChar(99)")]
		public string Mileage
		{
			get
			{
				return this._Mileage;
			}
			set
			{
				if ((this._Mileage != value))
				{
					this.OnMileageChanging(value);
					this.SendPropertyChanging();
					this._Mileage = value;
					this.SendPropertyChanged("Mileage");
					this.OnMileageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusCar", DbType="NVarChar(99) NOT NULL", CanBeNull=false)]
		public string StatusCar
		{
			get
			{
				return this._StatusCar;
			}
			set
			{
				if ((this._StatusCar != value))
				{
					this.OnStatusCarChanging(value);
					this.SendPropertyChanging();
					this._StatusCar = value;
					this.SendPropertyChanged("StatusCar");
					this.OnStatusCarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detail", DbType="NVarChar(MAX)")]
		public string Detail
		{
			get
			{
				return this._Detail;
			}
			set
			{
				if ((this._Detail != value))
				{
					this.OnDetailChanging(value);
					this.SendPropertyChanging();
					this._Detail = value;
					this.SendPropertyChanged("Detail");
					this.OnDetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="VarChar(500)")]
		public string Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updatedate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Updatedate
		{
			get
			{
				return this._Updatedate;
			}
			set
			{
				if ((this._Updatedate != value))
				{
					this.OnUpdatedateChanging(value);
					this.SendPropertyChanging();
					this._Updatedate = value;
					this.SendPropertyChanged("Updatedate");
					this.OnUpdatedateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CateID", DbType="Int")]
		public System.Nullable<int> CateID
		{
			get
			{
				return this._CateID;
			}
			set
			{
				if ((this._CateID != value))
				{
					if (this._Car_Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCateIDChanging(value);
					this.SendPropertyChanging();
					this._CateID = value;
					this.SendPropertyChanged("CateID");
					this.OnCateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int")]
		public System.Nullable<int> BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					if (this._BRANCH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_OrderDetail", Storage="_OrderDetails", ThisKey="CarID", OtherKey="CarID")]
		public EntitySet<OrderDetail> OrderDetails
		{
			get
			{
				return this._OrderDetails;
			}
			set
			{
				this._OrderDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BRANCH_CAR", Storage="_BRANCH", ThisKey="BranchID", OtherKey="BranchID", IsForeignKey=true)]
		public BRANCH BRANCH
		{
			get
			{
				return this._BRANCH.Entity;
			}
			set
			{
				BRANCH previousValue = this._BRANCH.Entity;
				if (((previousValue != value) 
							|| (this._BRANCH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BRANCH.Entity = null;
						previousValue.CARs.Remove(this);
					}
					this._BRANCH.Entity = value;
					if ((value != null))
					{
						value.CARs.Add(this);
						this._BranchID = value.BranchID;
					}
					else
					{
						this._BranchID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BRANCH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Car_Category_CAR", Storage="_Car_Category", ThisKey="CateID", OtherKey="CateID", IsForeignKey=true)]
		public Car_Category Car_Category
		{
			get
			{
				return this._Car_Category.Entity;
			}
			set
			{
				Car_Category previousValue = this._Car_Category.Entity;
				if (((previousValue != value) 
							|| (this._Car_Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Car_Category.Entity = null;
						previousValue.CARs.Remove(this);
					}
					this._Car_Category.Entity = value;
					if ((value != null))
					{
						value.CARs.Add(this);
						this._CateID = value.CateID;
					}
					else
					{
						this._CateID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Car_Category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.CAR = this;
		}
		
		private void detach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.CAR = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Car_Category")]
	public partial class Car_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CateID;
		
		private string _Catename;
		
		private EntitySet<CAR> _CARs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCateIDChanging(int value);
    partial void OnCateIDChanged();
    partial void OnCatenameChanging(string value);
    partial void OnCatenameChanged();
    #endregion
		
		public Car_Category()
		{
			this._CARs = new EntitySet<CAR>(new Action<CAR>(this.attach_CARs), new Action<CAR>(this.detach_CARs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CateID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CateID
		{
			get
			{
				return this._CateID;
			}
			set
			{
				if ((this._CateID != value))
				{
					this.OnCateIDChanging(value);
					this.SendPropertyChanging();
					this._CateID = value;
					this.SendPropertyChanged("CateID");
					this.OnCateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Catename", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Catename
		{
			get
			{
				return this._Catename;
			}
			set
			{
				if ((this._Catename != value))
				{
					this.OnCatenameChanging(value);
					this.SendPropertyChanging();
					this._Catename = value;
					this.SendPropertyChanged("Catename");
					this.OnCatenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Car_Category_CAR", Storage="_CARs", ThisKey="CateID", OtherKey="CateID")]
		public EntitySet<CAR> CARs
		{
			get
			{
				return this._CARs;
			}
			set
			{
				this._CARs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CARs(CAR entity)
		{
			this.SendPropertyChanging();
			entity.Car_Category = this;
		}
		
		private void detach_CARs(CAR entity)
		{
			this.SendPropertyChanging();
			entity.Car_Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CusID;
		
		private string _NameCus;
		
		private string _Account;
		
		private string _pass;
		
		private string _Email;
		
		private string _AddCustomer;
		
		private string _phoneNum;
		
		private System.Nullable<System.DateTime> _dob;
		
		private EntitySet<Bill_Order> _Bill_Orders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCusIDChanging(int value);
    partial void OnCusIDChanged();
    partial void OnNameCusChanging(string value);
    partial void OnNameCusChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnpassChanging(string value);
    partial void OnpassChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddCustomerChanging(string value);
    partial void OnAddCustomerChanged();
    partial void OnphoneNumChanging(string value);
    partial void OnphoneNumChanged();
    partial void OndobChanging(System.Nullable<System.DateTime> value);
    partial void OndobChanged();
    #endregion
		
		public Customer()
		{
			this._Bill_Orders = new EntitySet<Bill_Order>(new Action<Bill_Order>(this.attach_Bill_Orders), new Action<Bill_Order>(this.detach_Bill_Orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CusID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CusID
		{
			get
			{
				return this._CusID;
			}
			set
			{
				if ((this._CusID != value))
				{
					this.OnCusIDChanging(value);
					this.SendPropertyChanging();
					this._CusID = value;
					this.SendPropertyChanged("CusID");
					this.OnCusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameCus", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NameCus
		{
			get
			{
				return this._NameCus;
			}
			set
			{
				if ((this._NameCus != value))
				{
					this.OnNameCusChanging(value);
					this.SendPropertyChanging();
					this._NameCus = value;
					this.SendPropertyChanged("NameCus");
					this.OnNameCusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="VarChar(50)")]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string pass
		{
			get
			{
				return this._pass;
			}
			set
			{
				if ((this._pass != value))
				{
					this.OnpassChanging(value);
					this.SendPropertyChanging();
					this._pass = value;
					this.SendPropertyChanged("pass");
					this.OnpassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddCustomer", DbType="NVarChar(200)")]
		public string AddCustomer
		{
			get
			{
				return this._AddCustomer;
			}
			set
			{
				if ((this._AddCustomer != value))
				{
					this.OnAddCustomerChanging(value);
					this.SendPropertyChanging();
					this._AddCustomer = value;
					this.SendPropertyChanged("AddCustomer");
					this.OnAddCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneNum", DbType="NVarChar(50)")]
		public string phoneNum
		{
			get
			{
				return this._phoneNum;
			}
			set
			{
				if ((this._phoneNum != value))
				{
					this.OnphoneNumChanging(value);
					this.SendPropertyChanging();
					this._phoneNum = value;
					this.SendPropertyChanged("phoneNum");
					this.OnphoneNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dob", DbType="DateTime")]
		public System.Nullable<System.DateTime> dob
		{
			get
			{
				return this._dob;
			}
			set
			{
				if ((this._dob != value))
				{
					this.OndobChanging(value);
					this.SendPropertyChanging();
					this._dob = value;
					this.SendPropertyChanged("dob");
					this.OndobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Bill_Order", Storage="_Bill_Orders", ThisKey="CusID", OtherKey="CusID")]
		public EntitySet<Bill_Order> Bill_Orders
		{
			get
			{
				return this._Bill_Orders;
			}
			set
			{
				this._Bill_Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bill_Orders(Bill_Order entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Bill_Orders(Bill_Order entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderDetail")]
	public partial class OrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderID;
		
		private int _CarID;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<decimal> _unitPrice;
		
		private EntityRef<CAR> _CAR;
		
		private EntityRef<Bill_Order> _Bill_Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnCarIDChanging(int value);
    partial void OnCarIDChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnunitPriceChanging(System.Nullable<decimal> value);
    partial void OnunitPriceChanged();
    #endregion
		
		public OrderDetail()
		{
			this._CAR = default(EntityRef<CAR>);
			this._Bill_Order = default(EntityRef<Bill_Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._Bill_Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CarID
		{
			get
			{
				return this._CarID;
			}
			set
			{
				if ((this._CarID != value))
				{
					if (this._CAR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarIDChanging(value);
					this.SendPropertyChanging();
					this._CarID = value;
					this.SendPropertyChanged("CarID");
					this.OnCarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitPrice", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> unitPrice
		{
			get
			{
				return this._unitPrice;
			}
			set
			{
				if ((this._unitPrice != value))
				{
					this.OnunitPriceChanging(value);
					this.SendPropertyChanging();
					this._unitPrice = value;
					this.SendPropertyChanged("unitPrice");
					this.OnunitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAR_OrderDetail", Storage="_CAR", ThisKey="CarID", OtherKey="CarID", IsForeignKey=true)]
		public CAR CAR
		{
			get
			{
				return this._CAR.Entity;
			}
			set
			{
				CAR previousValue = this._CAR.Entity;
				if (((previousValue != value) 
							|| (this._CAR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAR.Entity = null;
						previousValue.OrderDetails.Remove(this);
					}
					this._CAR.Entity = value;
					if ((value != null))
					{
						value.OrderDetails.Add(this);
						this._CarID = value.CarID;
					}
					else
					{
						this._CarID = default(int);
					}
					this.SendPropertyChanged("CAR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bill_Order_OrderDetail", Storage="_Bill_Order", ThisKey="OrderID", OtherKey="OrderID", IsForeignKey=true)]
		public Bill_Order Bill_Order
		{
			get
			{
				return this._Bill_Order.Entity;
			}
			set
			{
				Bill_Order previousValue = this._Bill_Order.Entity;
				if (((previousValue != value) 
							|| (this._Bill_Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bill_Order.Entity = null;
						previousValue.OrderDetails1.Remove(this);
					}
					this._Bill_Order.Entity = value;
					if ((value != null))
					{
						value.OrderDetails1.Add(this);
						this._OrderID = value.OrderID;
					}
					else
					{
						this._OrderID = default(int);
					}
					this.SendPropertyChanged("Bill_Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserAdmin;
		
		private string _PassAdmin;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserAdminChanging(string value);
    partial void OnUserAdminChanged();
    partial void OnPassAdminChanging(string value);
    partial void OnPassAdminChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAdmin", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserAdmin
		{
			get
			{
				return this._UserAdmin;
			}
			set
			{
				if ((this._UserAdmin != value))
				{
					this.OnUserAdminChanging(value);
					this.SendPropertyChanging();
					this._UserAdmin = value;
					this.SendPropertyChanged("UserAdmin");
					this.OnUserAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassAdmin", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PassAdmin
		{
			get
			{
				return this._PassAdmin;
			}
			set
			{
				if ((this._PassAdmin != value))
				{
					this.OnPassAdminChanging(value);
					this.SendPropertyChanging();
					this._PassAdmin = value;
					this.SendPropertyChanged("PassAdmin");
					this.OnPassAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
